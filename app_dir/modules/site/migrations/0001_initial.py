# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-02-06 15:53
from __future__ import unicode_literals

import datetime
from decimal import Decimal
import django.contrib.sites.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorizationKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('facebook', 'Facebook-Oauth2'), ('google-oauth2', 'Google-Oauth2')], max_length=20, verbose_name='name')),
                ('key', models.TextField(verbose_name='key')),
                ('password', models.TextField(verbose_name='password')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank', models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch', to='site.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.TextField(blank=True, null=True)),
                ('check', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, default='', max_length=100, null=True, validators=[django.contrib.sites.models._simple_domain_name_validator], verbose_name='domain')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='email')),
                ('header_text', models.CharField(blank=True, max_length=200, verbose_name='header text')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='site description')),
                ('loyalty_point_equiv', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)], verbose_name='loyalty points equivalency')),
                ('floors', models.IntegerField(default=Decimal('6'), validators=[django.core.validators.MinValueValidator(0)], verbose_name='floors')),
                ('max_credit_date', models.IntegerField(default=Decimal('0'), unique=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maximum credit sale expiration in days')),
                ('opening_time', models.TimeField(default=datetime.time(6, 0), verbose_name='opening time')),
                ('closing_time', models.TimeField(default=datetime.time(21, 0), verbose_name='closing time')),
                ('sms_gateway_username', models.CharField(blank=True, max_length=500, verbose_name='sms gateway username')),
                ('sms_gateway_apikey', models.CharField(blank=True, max_length=500, verbose_name='sms gateway api key')),
                ('image', models.ImageField(blank=True, null=True, upload_to='employee')),
            ],
            options={
                'verbose_name': 'site',
                'verbose_name_plural': 'site',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='authorizationkey',
            name='site_settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='site.SiteSettings'),
        ),
        migrations.AlterUniqueTogether(
            name='authorizationkey',
            unique_together=set([('site_settings', 'name')]),
        ),
    ]
